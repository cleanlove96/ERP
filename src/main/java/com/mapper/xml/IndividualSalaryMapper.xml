<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.IndividualSalaryMapper">
	<resultMap id="BaseResultMap"
		type="com.model.IndividualSalary">
		<id column="individual_salary_id" property="individualSalaryId"
			jdbcType="VARCHAR" />
		<result column="account_id" property="accountId"
			jdbcType="VARCHAR" />
		<result column="adjust_money" property="adjustMoney"
			jdbcType="DOUBLE" />
		<result column="adjust_time" property="adjustTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="salaryBaseResultMap"
		type="com.pojo.BaseSalaryPojo">
		<result column="salary" property="salary" jdbcType="DOUBLE" />
		<result column="adjust_money" property="adjustMoney"
			jdbcType="DOUBLE" />
	</resultMap>
	<sql id="Base_Column_List">
		individual_salary_id, account_id, adjust_money, adjust_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from individual_salary
		where individual_salary_id = #{individualSalaryId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from individual_salary
		where individual_salary_id = #{individualSalaryId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.model.IndividualSalary">
		insert into individual_salary (individual_salary_id, account_id,
		adjust_money,
		adjust_time)
		values (#{individualSalaryId,jdbcType=VARCHAR},
		#{accountId,jdbcType=VARCHAR}, #{adjustMoney,jdbcType=DOUBLE},
		#{adjustTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.model.IndividualSalary">
		insert into individual_salary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="individualSalaryId != null">
				individual_salary_id,
			</if>
			<if test="accountId != null">
				account_id,
			</if>
			<if test="adjustMoney != null">
				adjust_money,
			</if>
			<if test="adjustTime != null">
				adjust_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="individualSalaryId != null">
				#{individualSalaryId,jdbcType=VARCHAR},
			</if>
			<if test="accountId != null">
				#{accountId,jdbcType=VARCHAR},
			</if>
			<if test="adjustMoney != null">
				#{adjustMoney,jdbcType=DOUBLE},
			</if>
			<if test="adjustTime != null">
				#{adjustTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.model.IndividualSalary">
		update individual_salary
		<set>
			<if test="accountId != null">
				account_id = #{accountId,jdbcType=VARCHAR},
			</if>
			<if test="adjustMoney != null">
				adjust_money = #{adjustMoney,jdbcType=DOUBLE},
			</if>
			<if test="adjustTime != null">
				adjust_time = #{adjustTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where individual_salary_id = #{individualSalaryId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.model.IndividualSalary">
		update individual_salary
		set account_id = #{accountId,jdbcType=VARCHAR},
		adjust_money = #{adjustMoney,jdbcType=DOUBLE},
		adjust_time = #{adjustTime,jdbcType=TIMESTAMP}
		where individual_salary_id = #{individualSalaryId,jdbcType=VARCHAR}
	</update>

	<select id="selectBaseMonerAndOtherMoney"
		resultMap="salaryBaseResultMap">
		SELECT
		salary_scale_table.salary,
		individual_salary.adjust_money
		FROM
		salary_scale_table
		INNER JOIN account_role ON account_role.role_id =
		salary_scale_table.role_id
		INNER JOIN individual_salary ON account_role.account_id =
		individual_salary.account_id
		WHERE account_role.account_id=#{id,jdbcType=VARCHAR}
	</select>
</mapper>