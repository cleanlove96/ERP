<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.OrderTableMapper" >
  <resultMap id="BaseResultMap" type="com.model.OrderTable" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_receipts" property="orderReceipts" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="commodity_id" property="commodityId" jdbcType="VARCHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="order_deposit" property="orderDeposit" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="selectResultMap" type="com.model.OrderTableSelectResult" >
    <result column="order_receipts" property="orderReceipts" jdbcType="VARCHAR" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="selectDetailResultMap" type="com.model.OrderTableSelectDetailResult" >
    <result column="commodity_name" property="commodityName" jdbcType="VARCHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
    <result column="commodty_price" property="commodityPrice" jdbcType="DOUBLE" />
    <result column="commodity_total_price" property="commodityTotalPrice" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, order_receipts, customer_id, account_id, commodity_id, order_amount, order_price, 
    order_status, order_deposit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_table
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_table
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.model.OrderTable" >
    insert into order_table (order_id, order_receipts, customer_id, 
      account_id, commodity_id, order_amount, 
      order_price, order_status, order_deposit
      )
    values (#{orderId,jdbcType=VARCHAR}, #{orderReceipts,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=VARCHAR}, #{commodityId,jdbcType=VARCHAR}, #{orderAmount,jdbcType=INTEGER}, 
      #{orderPrice,jdbcType=DOUBLE}, #{orderStatus,jdbcType=VARCHAR}, #{orderDeposit,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.OrderTable" >
    insert into order_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderReceipts != null" >
        order_receipts,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="commodityId != null" >
        commodity_id,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderDeposit != null" >
        order_deposit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderReceipts != null" >
        #{orderReceipts,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="commodityId != null" >
        #{commodityId,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderDeposit != null" >
        #{orderDeposit,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.OrderTable" >
    update order_table
    <set >
      <if test="orderReceipts != null" >
        order_receipts = #{orderReceipts,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="commodityId != null" >
        commodity_id = #{commodityId,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderDeposit != null" >
        order_deposit = #{orderDeposit,jdbcType=DOUBLE},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.OrderTable" >
    update order_table
    set order_receipts = #{orderReceipts,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      commodity_id = #{commodityId,jdbcType=VARCHAR},
      order_amount = #{orderAmount,jdbcType=INTEGER},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_deposit = #{orderDeposit,jdbcType=DOUBLE}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <select id="selectOrder" resultMap="selectResultMap">
  	SELECT
	order_table.order_receipts,
	customer_info.customer_name,
	system_account.account_name,
	order_table.order_price,
	order_table.order_status
	FROM
	order_table
	INNER JOIN customer_info ON order_table.customer_id = customer_info.customer_id
	INNER JOIN system_account ON order_table.account_id = system_account.account_id
	where order_table.order_receipts like CONCAT('%',#{search,jdbcType=VARCHAR},'%') limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER} 
  </select>
   <select id="selectPageCount" resultType="java.lang.Integer">
  	select count(*) 
  	from 
  	order_table
  	where order_receipts like CONCAT('%',#{search,jdbcType=VARCHAR},'%') 
  </select>
  <select id="selectDetailsByOrderReceipts" parameterType="java.lang.String" resultMap="selectDetailResultMap">
  	SELECT
	system_commodity_information.commodity_name,
	order_table.order_amount,
	system_commodity_information.commodty_price,
	order_table.commodity_total_price
	FROM
	order_table
	INNER JOIN system_commodity_information ON order_table.commodity_id = system_commodity_information.commodity_id
	 where order_receipts = #{orderReceipts,jdbcType=VARCHAR}
  </select>
  <insert id="addOrder">
  	insert into order_table (order_id, order_receipts, customer_id, 
      account_id, commodity_id, order_amount, 
      order_price,commodity_total_price
      )
    values (#{id,jdbcType=VARCHAR}, #{receipts,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=VARCHAR}, #{commodityId,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{orderPrice,jdbcType=DOUBLE}, #{totalPrice,jdbcType=DOUBLE}
      )
  </insert>
</mapper>