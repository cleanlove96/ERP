<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.MaterialOutInStoreMapper">
	<resultMap id="BaseResultMap"
		type="com.model.MaterialOutInStore">
		<id column="material_out_in_id" property="materialOutInId"
			jdbcType="VARCHAR" />
		<result column="warehouse_id" property="warehouseId"
			jdbcType="VARCHAR" />
		<result column="material_id" property="materialId"
			jdbcType="VARCHAR" />
		<result column="material_inventory_amount"
			property="materialInventoryAmount" jdbcType="INTEGER" />
		<result column="material_inventory_value"
			property="materialInventoryValue" jdbcType="DOUBLE" />
		<result column="goods_type" property="goodsType"
			jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="BaseMap" type="com.pojo.MaterialStore">
		<id column="material_out_in_id" property="materialOutInId"
			jdbcType="VARCHAR" />
		<result column="warehouse_id" property="warehouseId"
			jdbcType="VARCHAR" />
		<result column="material_id" property="materialId"
			jdbcType="VARCHAR" />
		<result column="material_inventory_amount"
			property="materialInventoryAmount" jdbcType="INTEGER" />
		<result column="material_inventory_value"
			property="materialInventoryValue" jdbcType="DOUBLE" />
		<result column="goods_type" property="goodsType"
			jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="VARCHAR" />
		<result column="warehouse_name" property="warehouseName"
			jdbcType="VARCHAR" />
		<result column="material_name" property="materialName"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		material_out_in_id, warehouse_id, material_id,
		material_inventory_amount,
		material_inventory_value,
		goods_type, time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from material_out_in_store
		where material_out_in_id =
		#{materialOutInId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		material_out_in_store
		where material_out_in_id =
		#{materialOutInId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.model.MaterialOutInStore">
		insert into
		material_out_in_store (material_out_in_id, warehouse_id,
		material_id,
		material_inventory_amount, material_inventory_value,
		goods_type, time)
		values (#{materialOutInId,jdbcType=VARCHAR},
		#{warehouseId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR},
		#{materialInventoryAmount,jdbcType=INTEGER},
		#{materialInventoryValue,jdbcType=DOUBLE},
		#{goodsType,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.model.MaterialOutInStore">
		insert into material_out_in_store
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="materialOutInId != null">
				material_out_in_id,
			</if>
			<if test="warehouseId != null">
				warehouse_id,
			</if>
			<if test="materialId != null">
				material_id,
			</if>
			<if test="materialInventoryAmount != null">
				material_inventory_amount,
			</if>
			<if test="materialInventoryValue != null">
				material_inventory_value,
			</if>
			<if test="goodsType != null">
				goods_type,
			</if>
			<if test="time != null">
				time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="materialOutInId != null">
				#{materialOutInId,jdbcType=VARCHAR},
			</if>
			<if test="warehouseId != null">
				#{warehouseId,jdbcType=VARCHAR},
			</if>
			<if test="materialId != null">
				#{materialId,jdbcType=VARCHAR},
			</if>
			<if test="materialInventoryAmount != null">
				#{materialInventoryAmount,jdbcType=INTEGER},
			</if>
			<if test="materialInventoryValue != null">
				#{materialInventoryValue,jdbcType=DOUBLE},
			</if>
			<if test="goodsType != null">
				#{goodsType,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.model.MaterialOutInStore">
		update material_out_in_store
		<set>
			<if test="warehouseId != null">
				warehouse_id = #{warehouseId,jdbcType=VARCHAR},
			</if>
			<if test="materialId != null">
				material_id = #{materialId,jdbcType=VARCHAR},
			</if>
			<if test="materialInventoryAmount != null">
				material_inventory_amount =
				#{materialInventoryAmount,jdbcType=INTEGER},
			</if>
			<if test="materialInventoryValue != null">
				material_inventory_value =
				#{materialInventoryValue,jdbcType=DOUBLE},
			</if>
			<if test="goodsType != null">
				goods_type = #{goodsType,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=VARCHAR},
			</if>
		</set>
		where material_out_in_id = #{materialOutInId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.model.MaterialOutInStore">
		update material_out_in_store
		set warehouse_id =
		#{warehouseId,jdbcType=VARCHAR},
		material_id =
		#{materialId,jdbcType=VARCHAR},
		material_inventory_amount =
		#{materialInventoryAmount,jdbcType=INTEGER},
		material_inventory_value =
		#{materialInventoryValue,jdbcType=DOUBLE},
		goods_type =
		#{goodsType,jdbcType=VARCHAR},
		time = #{time,jdbcType=VARCHAR}
		where
		material_out_in_id = #{materialOutInId,jdbcType=VARCHAR}
	</update>

	<select id="getInfoTable" resultMap="BaseMap">
		SELECT
		material_out_in_store.material_out_in_id,
		material_out_in_store.warehouse_id,
		material_out_in_store.material_id,
		material_out_in_store.material_inventory_amount,
		material_out_in_store.material_inventory_value,
		material_out_in_store.goods_type,
		material_out_in_store.time,
		warehouse.warehouse_name,
		sys_material.material_name
		FROM
		material_out_in_store
		INNER JOIN warehouse ON material_out_in_store.warehouse_id =
		warehouse.warehouse_id
		INNER JOIN sys_material ON material_out_in_store.material_id =
		sys_material.material_id
		where material_out_in_store.time like
		#{s2,jdbcType=VARCHAR} and sys_material.material_name
		like
		#{s,jdbcType=VARCHAR}
		LIMIT
		#{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
	</select>

	<select id="getTotalNum" resultType="java.lang.Integer">
		SELECT
		count(*)
		material_out_in_store
		FROM
		material_out_in_store
		INNER JOIN sys_material ON material_out_in_store.material_id =
		sys_material.material_id

		where material_out_in_store.time like
		#{s2,jdbcType=VARCHAR} and sys_material.material_name
		like
		#{s,jdbcType=VARCHAR}
	</select>
</mapper>